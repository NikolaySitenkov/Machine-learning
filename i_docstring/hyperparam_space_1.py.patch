# Patch generated by Pyment v0.4.0dev

--- a/hyperparam_space_1.py
+++ b/hyperparam_space_1.py
@@ -2,8 +2,7 @@
 
 
 def get_bound_types(space):
-    """
-    Get parameter's type
+    """Get parameter's type
         - 'uniform': uniform distribution [a, b]
         - 'quniform': uniform distribution [a, b] with step q
         - 'quniform_int': uniform distribution [a, b] with integer step q
@@ -13,8 +12,9 @@
 
     :param space: Boundaries
     :type space: dict
-    :returns:Boundaries type
+    :returns: Boundaries type
     :rtype: dict
+
     """
     btypes = {}
 
@@ -61,6 +61,12 @@
 
 
 def fix_params(params, space):
+    """
+
+    :param params: 
+    :param space: 
+
+    """
     params = dict(params)
     btypes = get_bound_types(space)
 
@@ -95,11 +101,12 @@
 
 def ranking(ser):
     """Make rank transformation.
-    @param ser: Values for ranking. None interpreted as worst.
-    @type ser: Series of float
 
-    @return: Ranks (1: highest, N: lowest)
-    @rtype: Series of int
+    :param ser: Values for ranking. None interpreted as worst.
+    :type ser: Series of float
+    :returns: Ranks (1: highest, N: lowest)
+    :rtype: Series of int
+
     """
     ser = ser.fillna(ser.min())
 
@@ -111,22 +118,21 @@
 
 def qround(x, a, b, q):
     """Convert x to one of [a, a+q, a+2q, .., b]
-    Parameters
-    ----
-    x : int or float
-        Input value. x must be in [a, b].
+
+    :param x: Input value. x must be in [a, b].
         If x < a, x set to a.
         If x > b, x set to b.
-    a : int or float
-        Boundaries. b must be greater than a. Otherwize b set to a.
-    b : int or float
-        Boundaries. b must be greater than a. Otherwize b set to a.
-    q : int or float
-        Step value. If q and a are both integer, x set to integer too.
-    Returns
-    -------
-    int or float
-        Rounded value
+    :type x: int or float
+    :param a: Boundaries. b must be greater than a. Otherwize b set to a.
+    :type a: int or float
+    :param b: Boundaries. b must be greater than a. Otherwize b set to a.
+    :type b: int or float
+    :param q: 
+    :type q: int or float
+    :returns: Rounded value
+    :rtype: int or float
+
+    
     """
     # Check if a <= x <= b
     b = max(a, b)
